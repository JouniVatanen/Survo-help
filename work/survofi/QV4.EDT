SURVO 98 edit field:    101       1000       1000 (32 bit version)
0001|*SAVE QV4
0004|*LOAD EDQ
0006|+LINCO? þ PRINT CUR+1,E TO qv4_01.html
0007|- include HTML40.DEV
0008|- include Q.DV2
0009|- [HelpText]
0010|#LINCO <data>,<matrix_of_coefficients>
S   |       <    > <                      >
0011|*computes and saves linear combinations of variables in <data> into
S   |                                                        <    >
0012|*the same data (file). <matrix_of_coefficients> is a standard MAT
S   |                       <                      >
0013|*file with following properties:
0014|*The names of variables to be used in linear combinations are the
0015|*row labels (8 first characters will be matched) of the matrix.
0016|*An additive constant must be indicated by row label 'constant' or
0017|*'-'.
0018|*The names of the linear combinations are the column labels of the
0019|*matrix. New variables (of 4 bytes) are created when necessary.
0021|*Lagged variables may be used by giving in the matrix an extra
0022|*column with label '#lag' and with integer elements. In this column
0023|*negative values refer to lags and positive to leads.
0025|*LINCO will be an important auxiliary operation when computing
0026|*various derived variables in linear models, multivariate analysis, etc.
0027|*Several statistical modules generate their own matrices of coeffi-
0028|*cients to be used in LINCO. For example, LINREG gives the regression
0029|*coefficients (REG.M) to be used in computing predicted values of
0030|- shadow %: [LINK(q0e_01.html)] [/LINK]
0031|*the model (See also OUTCNTRL?).
S   |                     %%%%%%%%
0033|*Example:  11 *              w=1/5
0034|*          12 *MATRIX MOV5
0035|*          13 *///      %2   #lag
0036|*          14 *%1        w    -2
0037|*          15 *%1        w    -1
0038|*          16 *%1        w     0
0039|*          17 *%1        w     1
0040|*          18 *%1        w     2
0041|*          19 *
0042|*          20 *MAT SAVE MOV5
0043|*          21 *LINCO DATA1,MOV5(Temp,Ave5)
0044|*LINCO on line 21 computes and saves a five term moving average 'Ave5'
0045|*of variable 'Temp' in data 'DATA1'. The matrix of coefficients 'MOV5'
0046|*has to be saved by MAT SAVE MOV5 on line 20 before activating LINCO.
0047|*The matrix of coefficients may have replaceable parameters %1,%2,...
0048|*as column and row labels, too. In this example MOV5(Temp,Ave5) means
0049|*that %1 will be replaced by 'Temp' and %2 by 'Ave5'. Hence, the same
0050|*matrix may be used for different applications.
0051|- shadow a: [LINK(qv1_01.html)]
0052|*  V = More information on transformations (VAR)
S   |   a                                           |
0053|- shadow a: [LINK(q0e_06.html#MATRES)]
0054|*  O = Output matrices (giving coefficients)
S   |   a                                       |
0055|- shadow a: [LINK(q21_01.html)]
0056|*  S = More information on statistical operations
S   |   a                                            |
0057|E
0060|+CLASSIFY? þ PRINT CUR+1,E TO qv4_02.html
0061|- include HTML40.DEV
0062|- include Q.DV2
0063|- [HelpText]
0064|#CLASSIFY <data>,<classification>,<input_variable>,<output_variable>
S   |          <    > <              > <              > <               >
0065|*computes the values of <output_variable> as a function of <input_
S   |                        <               >                  <
0066|*variable> in Survo <data> according to a given <classification>.
S   |         >          <    >                      <              >
0068|*Specifications IND and CASES can be used for selecting observations.
0070|*<classification> has to be defined in the following form:
S   | <              >
0071|*CLASSIFICATION <classification>
S   |                <              >
0072|*<values_of_input_variable>: <value_of_output_variable>
S   | <                        >  <                        >
0073|*<values_of_input_variable>: <value_of_output_variable>
S   | <                        >  <                        >
0074|*...
0075|*END
0077|*<input_variable> and <output_variable> can be numeric or string
S   | <              >     <               >
0078|*variables. If <output_variable> does not exist, a new variable will be
S   |               <               >
0079|*automatically created.
0081|*Examples on classification rules:
0082|*CLASSIFICATION NUMBERS
0083|*1,3,5,7,9: odd
0084|*0,2,4,6,8: even
0085|*OTHERS:    SAME
0086|*END
0087|*maps values 1,3,5,7 and 9 to 'odd' and 0,2,4,6 and 8 to 'even'.
0088|*Other values (OTHERS) will be the same (SAME).
0090|*CLASSIFICATION C1
0091|*0,99,MISSING: MISSING
0092|*11 - 20:      1
0093|*21 - 40:      2
0094|*OTHERS:       3
0095|*END
0096|*classifies values 0,99 and missing values of <input_variable> as
S   |                                              <              >
0097|*missing values, values from 11 to 20 as 1, values from 21 to 40 as 2
0098|*and all other values as 3.
0100|*Examples (continued):
0101|*Special features when the source field is a string:
0103|*CLASSIFICATION C2
0104|*M1,M2,M31:  A
0105|*M3 - M6:    B
0106|*M7:         C
0107|*END
0108|*maps values of a string variable. For example, M315 -> A, but M302 -> B.
S   |                                                      >              >
0109|*Thus if the alternatives overlap, the first valid case is selected.
0111|*To indicate space characters in the CLASSIFICATION list, any character
0112|*(say _) can be selected by entering a specification SPACE=_  .
0113|*Then, for example,
0114|*CLASSIFICATION C3
0115|*___:           0
0116|*A__,_A_,__A:   1
0117|*AA_,A_A,_AA:   2
0118|*AAA:           3
0119|*END
0120|*gives the number of `A's in a three-character string field. The true
0121|*values of that string field are assumed to be
0122|*"   ", "A  ", " A ", "  A", "AA ", "A A", " AA", "AAA".
0124|*Wild characters are accepted by giving a specification WILD=? .
0125|*For example, the line
0126|*A??:      1
0127|*in the CLASSIFICATION list implies that any three letter string
0128|*starting with A is mapped to 1.
0130|*Similarly, partial matches are indicated by giving a specification
0131|*PARTIAL=*
0132|*Then, for example, the line
0133|**DOS:     2
0134|*in the CLASSIFICATION list maps all cases where DOS appears as
0135|*a substring to 2.
0137|*Alternatives for OTHERS in the CLASSIFICATION list are
0139|*                     value of <output_variable>
S   |                               <               >
0140|*OTHERS: MISSING      missing value
0141|*OTHERS: SAME         equal to <input_variable>
S   |                               <              >
0142|*OTHERS: NO_CHANGE    remains unchanged
0144|- shadow a: [LINK(qv1_01.html)]
0145|*  V = More information on transformations
S   |   a                                     |
0146|E
