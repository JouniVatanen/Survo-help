SURVO 98 edit field:    101       1000       1000 (32 bit version)
0001|*SAVE QTU2
0004|*LOAD EDQTU3
0006|+TUTCOND? þ PRINT CUR+1,E TO qtu2_01.html
0007|- include HTML40.DEV
0008|- include Q.DV2
0009|- [HelpText]
0010|*Conditional statements of the sucro language are working with the
0011|*words and numbers in the sucro memory (tutstack). They refer to
0012|*labelled points in the program list by 'goto' statements or to other
0013|*sucros by 'load' statements.
0015|- shadow a: [LINK(qtu2_02.html)]
0016|*  1 = Labels, 'goto' and ' load' statements
S   |   a                                       |
0017|- shadow a: [LINK(qtu2_04.html)]
0018|*  2 = 'if' statement
S   |   a                |
0019|- shadow a: [LINK(qtu2_05.html)]
0020|*  3 = 'switch' statement
S   |   a                    |
0022|- shadow a: [LINK(qtu3_01.html)]
0023|*  C = More information on control words and statements in sucro programs
S   |   a                                                                    |
0024|E
0026|+GOTO? þ PRINT CUR+1,E TO qtu2_02.html
0027|- include HTML40.DEV
0028|- include Q.DV2
0029|- [HelpText]
0030|*Labels are character strings in the beginning of edit lines having '+'
0031|ain the control column. Labels are referred to by the {goto <label>}
S   |                                                            <     >
0032|*statement.
0034|* + Part2: <sucro code continued>
S   |           <                    >
0035|*                    with '+' in the control column gives label 'Part2'.
0036|*                    The colon ':' and the space after it belong to the
0037|*                    label notation.
0039|a  {goto Part2}      Go to the place indicated by label 'Part2'.
0041|*In many cases, it is wise to split a large sucro into several parts.
0042|aNew sucro is linked during the run by a {load <sucro>} command:
S   |                                               <     >
0044|a  {load Cont}       Continue with another sucro 'Cont'.
0045|*                    The contents of the tutstack and other system
0046|*                    parameters are preserved.
0048|- shadow a: [LINK(qtu2_01.html)]
0049|*   S = More information on conditional statements
S   |    a                                            |
0050|- shadow a: [LINK(qtu3_01.html)]
0051|*   C = Code words and statements in sucros
S   |    a                                     |
0052|E
0053|+S? þ PRINT CUR+1,E TO qtu2_03.html
0054|- include HTML40.DEV
0055|- include Q.DV2
0056|- [HelpText]
0058|- shadow a: [LINK(qtu2_01.html)]
0059|*   S = More information on conditional statements
S   |    a                                            |
0060|- shadow a: [LINK(qtu3_01.html)]
0061|*   C = Code words and statements in sucros
S   |    a                                     |
0062|E
0064|+IF? þ PRINT CUR+1,E TO qtu2_04.html
0065|- include HTML40.DEV
0066|- include Q.DV2
0067|- [HelpText]
0068|*'if' statement:
0069|*Words and numbers in the tutstack are compared to each other and to constants
0070|*both as numbers and as strings by 'if' statements which are written
0071|*on edit lines having a '-' in the control column.
0072|*In string comparisons, the relational symbol must be given in inverted
0073|*commas.
0075|*The general form is
0076|* - if <condition> then goto <label>
S   |       <         >           <     >
0077|*or
0078|* - if <condition> then load <another_sucro>
S   |       <         >           <             >
0080|*where <condition> is a relation between tutstack words and constants.
S   |       <         >
0081|*Also an augmented form with an 'else' clause is available.
0083|*Examples:
0084|* - if W1 '=' Tue then goto Tuesday
0085|*      If W1 contains string "Tue", sucro will continue from label 'Tuesday'.
0087|* - if W2 < W3 then load EX1 else goto End
S   |          <
0088|*      If number in W2 is less than number in W3, call another sucro EX1
0089|*      else go to label 'End'.
0091|a - if Wstr '=' {} then goto A
0092|a - if Wstr '<>' {sp} then goto B
S   |             <>
0093|*      If Wstr is empty, goto 'A'. If Wstr is not a space character,
0094|*      goto 'B'.
0096|*Permitted relational symbols are =, <, <=, >, >=, and <> .
S   |                                     <  <   >  >       <>
0098|- [New]
0099|*In SURVO MM, numerical conditions in if statements of sucros can be
0100|*more general:
0101|- [/New]
0102|*Example:
0104|*  / def Wheight=W1 Wlength=W2
0105|*  ...
0106|*  - if Wheight > 2*Wlength then goto A
S   |                >
0107|*  - if Wheight*Wlength = 4000 then goto B
0108|*  - if 100/Wlength > 0.7 then goto C else goto D
S   |                    >
0109|*  ...
0111|*Thus on both sides of the condition, sums, differences, products,
0112|*and ratios of two operands may appear.
0114|- shadow a: [LINK(qtu2_01.html)]
0115|*   S = More information on conditional statements
S   |    a                                            |
0116|- shadow a: [LINK(qtu3_01.html)]
0117|*   C = Code words and statements in sucros
S   |    a                                     |
0118|E
0120|+SWITCH? þ PRINT CUR+1,E TO qtu2_05.html
0121|- include HTML40.DEV
0122|- include Q.DV2
0123|- [HelpText]
0124|*Several alternatives can be processed simultaneously by a 'switch'
0125|*statement:
0126|*Assume that current weekday has been obtained in W1 as one of the
0127|*abbreviations Sun,Mon,...  The following part of a sucro writes
0128|*a proper sentence 'Today is Sunday.', etc.
0130|*Example:
0131|* 11 *Today is
0132|* 12 - switch W1
0133|* 13 -   case Sun: goto Sun
0134|* 14 -   case Mon: goto Mon
0135|* 15 -   case Tue: goto Tue
0136|* 16 -   case Wed: goto Wed
0137|* 17 -   case Thu: goto Thu
0138|* 18 -   case Fri: goto Fri
0139|* 19 -   case Sat: goto Sat
0140|a 20 + Sun:  Sunday{goto End}
0141|a 21 + Mon:  Monday{goto End}
0142|a 22 + Tue:  Tuesday{goto End}
0143|a 23 + Wed:  Wednesday{goto End}
0144|a 23 + Thu:  Thursday{goto End}
0145|a 25 + Fri:  Friday{goto End}
0146|a 26 + Sat:  Saturday{goto End}
0147|a 27 + End: .{end}
0149|- shadow a: [LINK(qtu2_01.html)]
0150|*   S = More information on conditional statements
S   |    a                                            |
0151|- shadow a: [LINK(qtu3_01.html)]
0152|*   C = Code words and statements in sucros
S   |    a                                     |
0153|E
0155|+TUTPROM? þ PRINT CUR+1,E TO qtu2_06.html
0156|- include HTML40.DEV
0157|- include Q.DV2
0158|- [HelpText]
0159|*User interaction in sucros:
0161|*Prompts for the user are presented by the 'prompt' and 'on key'
0162|*statements.
0164|- shadow a: [LINK(qtu2_07.html)]
0165|*  1 = 'prompt' statement
S   |   a                    |
0166|- shadow a: [LINK(qtu2_09.html)]
0167|*  2 = 'on key' statement
S   |   a                    |
0168|- shadow a: [LINK(qtu2_10.html)]
0169|*  3 = User interaction during Survo operations
S   |   a                                          |
0171|- shadow a: [LINK(qtu3_01.html)]
0172|*  C = More information on control words and statements in sucro programs
S   |   a                                                                    |
0173|E
0175|+PROMPT? þ PRINT CUR+1,E TO qtu2_07.html
0176|- include HTML40.DEV
0177|- include Q.DV2
0178|- [HelpText]
0179|*The 'prompt' statement in sucros has the general form (all lines are starting
0180|*by '-' in the control column):
0182|a  - prompt <Question text ?> {}
S   |            <               >
0183|a  -   default <default answer, text or tutstack word>
S   |               <                                     >
0184|a  -   answer  <name of tutstack word for the answer (optional)>
S   |               <                                               >
0185|a  -   length  <max. length of the answer>
S   |               <                         >
0186|a  -   wait    <max. waiting time in 0.1 seconds, integer or tutstack word>
S   |               <                                                          >
0188|*The prompt line displays the text intended as a question.
0189|*The optional answer line gives the place of the answer in the tutstack.
0190|*If the answer line is missing, the answer is appended as the last word
0191|*to the tutstack.
0192|*If the user gives no answer, the sucro waits until the time qiven on
0193|*the wait line is over and accepts the default answer which also can
0194|*be a tutstack word.
0195|*Although the question and the answer are displayed on the screen in
0196|*the current context of the edit field, they are not permanently written
0197|*into the edit field.
0198|*The prompt can be interrupted by the ESC key. Then the text '(break)'
0199|*will appear as an answer.
0201|*Example:
0202|*This part of a sucro prompts the user to give his/her age and writes
0203|*a sentence as a comment of the answer.
0205|a 12 - prompt Your age ?                        / question
0206|a 13 -   default 0                              / default answer
0207|* 14 -   answer W1                              / place for the answer
0208|a 15 -   length 3                               / length of the answer
0209|a 16 -   wait 1000                              / max. waiting time
0210|a 17 - if W1 < 3 then goto Too_young            / comparing answer W1
S   |             <
0211|a 18 - if W1 > 99 then goto Too_old             / with 3 and 99
S   |             >
0212|a 19 *{R}
0213|a 20 *Your age is {print W1}.{goto End}         / displaying answer
0214|a 21 + Too_young: {R}
0215|a 22 *Are you so young really?{goto End}
0216|a 23 + Too_old: {R}
0217|a 24 *Hard to believe that you are so old!
0218|a 25 + End: {end}
0220|- shadow a: [LINK(qtu2_06.html)]
0221|*   U = More information on user interaction
S   |    a                                      |
0222|- shadow a: [LINK(qtu3_01.html)]
0223|*   C = Code words and statements in sucros
S   |    a                                     |
0224|E
0225|+P? þ PRINT CUR+1,E TO qtu2_08.html
0226|- include HTML40.DEV
0227|- include Q.DV2
0228|- [HelpText]
0230|- shadow a: [LINK(qtu2_06.html)]
0231|*   U = More information on user interaction
S   |    a                                      |
0232|- shadow a: [LINK(qtu3_01.html)]
0233|*   C = Code words and statements in sucros
S   |    a                                     |
0234|E
0236|+ONKEY? þ PRINT CUR+1,E TO qtu2_09.html
0237|- include HTML40.DEV
0238|- include Q.DV2
0239|- [HelpText]
0240|*'on key' statement makes possible to branch in a sucro according to
0241|*the key pressed by the user as shown in this example:
0243|* 11 *Continue (Y/N) ?
0244|* 12 - on key
0245|* 13 -    key N: goto End
0246|* 14 -    key n: goto End
0247|* 15 -    key Y: continue
0248|* 16 -    key y: continue
0249|* 17 - wait 300
0250|a 18 *{home}{erase}Thus we are continuing...
0252|*Here the sucro prompts the user to press one key by displaying
0253|*    Continue (Y/N) ?_
0254|*If the user presses N or n, the sucro goes to label 'End'. If the
0255|*user presses Y or y, the process continues from the first line (18)
0256|*without a '-' in the control column.
0257|*The 'wait' line (17) indicates the maximum waiting time for the answer.
0258|*If any other key is pressed or no answer is given, the first case (N)
0259|*is selected.
0261|*In the 'on key' statement, also the following special keys may be tested:
0262|*ENTER, RIGHT, LEFT, UP, DOWN, HOME, HELP, ESC,
0263|*SP, COLON, INSERT, INS_LINE, DELETE, DEL_LINE, ERASE, NEXT, PREV, DISK,
0264|*BACKSP, REF, MERGE, COPY, TAB, HELP, SRCH, ACTIV, MOVE, END, WORDS.
0266|*Also calling other sucros by 'load <sucro>' is permitted:
S   |                                    <     >
0268|a 11 *  A=Continuation{R}
0269|a 12 *  B=Alternative B{R}
0270|a 13 *  C=Alternative C{R}
0271|* 14 *Select one of the alternatives A,B,C:
0272|* 15 - on key
0273|* 16 -    key ENTER: continue
0274|* 17 -    key A: continue
0275|* 18 -    key B: goto B1
0276|* 19 -    key C: load CSUCRO
0277|* 20 - wait 300
0278|a 21 *{R}{erase}...
0280|- shadow a: [LINK(qtu2_06.html)]
0281|*   U = More information on user interaction
S   |    a                                      |
0282|- shadow a: [LINK(qtu3_01.html)]
0283|*   C = Code words and statements in sucros
S   |    a                                     |
0284|E
0286|+INTER? þ PRINT CUR+1,E TO qtu2_10.html
0287|- include HTML40.DEV
0288|- include Q.DV2
0289|- [HelpText]
0290|*User interaction during Survo operations
0292|*When a Survo operation involving user interaction (like FILE SHOW) is
0293|*activated in a sucro, the sucro in question normally takes the
0294|*responsibility of all actions of the user (like entering data values in
0295|*FILE SHOW) during that operation.
0296|*However, in some applications, it is useful that the sucro stands still
0297|*during such an operation thus letting the user to work on his/her own
0298|*until the end of the operation. For example, one would like to create
0299|*a data entry routine as a sucro using the FILE SHOW operation for
0300|*actual data input as such. To enable this kind of user interaction
0301|ain a sucro, the code word {interaction on} should be given in the
0302|asucro code before activating the operation in question by {act}.
0303|*To resume the default working mode of sucros, the code word
0304|a{interaction off} must given after {act}.
0306|*Example:
0307|aFILE SHOW {print Wdata}{interaction on}{act}{interaction off}
0309|- shadow a: [LINK(qtu2_06.html)]
0310|*   U = More information on user interaction
S   |    a                                      |
0311|- shadow a: [LINK(qtu3_01.html)]
0312|*   C = Code words and statements in sucros
S   |    a                                     |
0313|E
