SURVO 98 edit field:    101       1000       1000 (32 bit version)
0001|*SAVE QMR3
0005|*................................................................................
0006|+FACTOR? þ PRINT CUR+1,E TO qmr3_01.html
0007|- include HTML40.DEV
0008|- include Q.DV2
0009|- [HelpText]
0010|*Factor analysis:
0012|- shadow a: [LINK(qmr3_02.html)]
0013|*  G = General information
S   |   a                     |
0014|- shadow a: [LINK(qmr3_03.html)]
0015|*  S = Sucro /FACTOR for automatic solutions
S   |   a                                       |
0018|- shadow a: [LINK(q21_03.html)]
0019|*  1 = Correlations (CORR)
S   |   a                     |
0020|- shadow a: [LINK(qmr3_05.html)]
0021|*  2 = Extraction of initial factors (FACTA, MATRUN PFACT)
S   |   a                                                     |
0022|- shadow a: [LINK(qmr3_08.html)]
0023|*  3 = Rotation (ROTATE)
S   |   a                   |
0024|- shadow a: [LINK(qmr3_21.html)]
0025|*  4 = Factor scores (/FCOEFF, /FTCOEFF, LINCO)
S   |   a                                          |
0027|- shadow a: [LINK(qkv3_01.html)]
0028|*  5 = Reliability of factor images and measurement scales (RELIAB) /KV
S   |   a                                                                  |
0029|- shadow a: [LINK(qmr3_22.html)]
0030|*  6 = Transformation analysis (/TRAN-README)
S   |   a                                        |
0032|- shadow a: [LINK(qmr3_23.html)]
0033|*  7 = Enhanced displays of factor matrices (/LOADFACT)
S   |   a                                                  |
0035|- shadow a: [LINK(qmr2_01.html)]
0036|*  M = More information on multivariate analysis
S   |   a                                           |
0038|E
0039|+GEN? þ PRINT CUR+1,E TO qmr3_02.html
0040|- include HTML40.DEV
0041|- include Q.DV2
0042|- [HelpText]
0043|*   Factor analysis can be performed in following steps:
0045|*1) Compute the correlations of selected variables and observations
0046|*   by the CORR operation.
0047|*   This gives the correlation matrix CORR.M and the matrix MSN.M
0048|*   of means and standard deviations.
0049|*   The correlation matrix can be loaded by the sucro command
0050|*   /LOADCORR
0051|*   The significant correlations are then highlighted.
0052|*   More information by activating /LOADCORR ?
0054|*2) If you like to save these results more permanently, copy them by
0055|*   MAT R=CORR.M
0056|*   MAT M=MSN.M
0057|*   for example.
0059|*Factor analysis (continued)
0060|*3) Initial solution:
0061|*   Select the number of factors (say k) and activate
0062|*   FACTA CORR.M,k,L
0063|*   This gives the maximum likelihood solution as the factor matrix
0064|*   FACT.M with k factors. The result is written from line L onwards.
0066|*   Another alternative is:
0067|*   MATRUN PFACT,R,k
0068|*   gives the principal axes solution as factor matrix PFACT.M .
0069|*   The difference in estimated and computed communalities is displayed
0070|*   and the computed communalities are placed on the diagonal of R.
0071|*   MATRUN PFACT,R,k can be reactivated several times until
0072|*   the process has converged.
0073|*   The communalities and efficiencies of the factors can be computed
0074|*   afterwards by MATRUN SUM2,PFACT.M
0076|*Factor analysis (continued)
0077|*4) To rotate the maximum likelihood solution FACT.M (or the principal
0078|*   axes solution PFACT.M), activate
0079|*   ROTATE FACT.M,k
0080|*   This gives the Varimax solution AFACT.M and the corresponding
0081|*   rotation matrix TFACT.M with k factors.
0082|*   Other methods (graphical rotation etc.) can be selected by the
0083|- shadow %: [LINK(qmr3_08.html)] [/LINK]
0084|*   ROTATION specification (See ROTATE?).
S   |                                %%%%%%
0085|*   The communalities and efficiencies of the factors can be computed
0086|*   (also) afterwards by MATRUN SUM2,AFACT.M .
0088|*   The (rotated) factor matrix is displayed in a more legible form by
0089|*   /LOADFACT
0090|*   More information by activating
0091|*   /LOADFACT ?
0093|*Factor analysis (continued)
0094|*5) The factor scores are computed in two steps.
0095|*   At first the factor score coefficients are computed by
0096|*   /FCOEFF,AFACT.M,MSN.M .
0097|*   This gives the matrix of coefficients FCOEFF.M .
0098|*   If an oblique rotation has been used, the loadings for the factor
0099|*   scores are computed by /FTCOEFF,AFACT.M,TFACT.M,MSN.M .
0101|*6) Finally, factor scores are obtained by
0102|*   LINCO <data>,FCOEFF.M(F1,F2,...)
S   |          <    >
0103|*   where <data> is the original (or corresponding) Survo data (file)
S   |          <    >
0104|*   and F1,F2 are (possibly new) variables for factor scores.
0105|*   Thereafter the factor scores can be analyzed like any other data
0106|*   in Survo.
0108|- shadow a: [LINK(qmr3_01.html)]
0109|*  F = More information on factor analysis
S   |   a                                     |
0110|- shadow a: [LINK(qmr2_01.html)]
0111|*  M = More information on multivariate analysis
S   |   a                                           |
0112|- shadow a: [LINK(q21_01.html)]
0113|*  S = More information on statistical analysis
S   |   a                                          |
0114|E
0117|+/FACTOR? þ PRINT CUR+1,E TO qmr3_03.html
0118|- include HTML40.DEV
0119|- include Q.DV2
0120|- [HelpText]
0121|*/FACTOR <data>
S   |         <    >
0122|*This sucro performs the steps of factor analysis automatically by
0123|*using all active variables and observations in Survo data (file) <data>.
S   |                                                                  <    >
0124|*/FACTOR computes the correlations, determines a suitable number of
0125|*factors by inspecting the eigenvalues of the correlation matrix,
0126|*finds the initial solution by the maximum likelihood method, and
0127|*performs the factor rotation by the Varimax method.
0128|*By entering suitable specifications, selection of default settings can
0129|*be altered.
0130|*For more information on /FACTOR, activate it without parameters.
0132|*For example,
0133|*              MASK=--AAAAAAAAAA ROTATION=OBLIMIN RESULTS=100
0134|*/FACTOR DECA
0135|*makes the analysis with 10 active variables of DECA. In rotation, the
0136|*oblique Oblimin solution is used and maximal amount of results is
0137|*given.
0138|- shadow a: [LINK(qmr3_01.html)]
0139|*   F = More information on Factor analysis
S   |    a                                     |
0140|E
0141|+FF? þ PRINT CUR+1,E TO qmr3_04.html
0142|- include HTML40.DEV
0143|- include Q.DV2
0144|- [HelpText]
0145|- shadow a: [LINK(qmr3_01.html)]
0146|*   F = More information on Factor analysis
S   |    a                                     |
0147|E
0149|+F2? þ PRINT CUR+1,E TO qmr3_05.html
0150|- include HTML40.DEV
0151|- include Q.DV2
0152|- [HelpText]
0153|*Factor analysis: Extraction of initial factors
0154|- shadow a: [LINK(qmr3_07.html)]
0155|*   1 = Maximum likelihood solution (FACTA)
S   |    a                                     |
0156|- shadow a: [LINK(qmr3_07.html)]
0157|*   2 = Unweighted least squares solution, Minres (FACTA with METHOD=ULS)
S   |    a                                                                   |
0158|- shadow a: [LINK(qmr3_07.html)]
0159|*   3 = Generalized least squares solution (FACTA with METHOD=GLS)
S   |    a                                                            |
0160|- shadow a: [LINK(qmr3_06.html)]
0161|*   4 = Iterative least squares, Minres (MATRUN PFACT)
S   |    a                                                |
0162|E
0163|+PFACT? þ PRINT CUR+1,E TO qmr3_06.html
0164|- include HTML40.DEV
0165|- include Q.DV2
0166|- [HelpText]
0167|*MATRUN PFACT,R,k
0168|*gives the principal axes solution as factor matrix PFACT.M .
0169|*The difference in estimated and computed communalities is displayed
0170|*and the computed communalities are placed on the diagonal of R.
0171|*MATRUN PFACT,R,k can be reactivated several times until
0172|*the process has converged.
0173|*The communalities and efficiencies of the factors can be computed
0174|*afterwards by MATRUN SUM2,PFACT.M
0175|- shadow a: [LINK(qmr3_01.html)]
0176|*   F = More information on Factor analysis
S   |    a                                     |
0177|E
0179|+FACTA? þ PRINT CUR+1,E TO qmr3_07.html
0180|- include HTML40.DEV
0181|- include Q.DV2
0182|- [HelpText]
0183|#FACTA <correlation_matrix>,<number_of_factors>,L
S   |       <                  > <                 >
0184|*computes the factor matrix according to the maximum likelihood (ML)
0185|*principle. The algorithm presented by K.G.J”reskog is employed.
0186|*(See e.g. Chapter 7 in 'Statistical Methods for Digital Computers',
0187|*Volume III, edited by Enslein, Ralston and Wilf, Wiley 1977.)
0188|*Other estimation principles can be selected by
0189|*  METHOD=ULS  (Unweighted Least Squares, corresponding to the Minres
0190|*               method of Harman or the MATRUN PFACT routine),
0191|*  METHOD=GLS  (Generalized Least Squares).
0192|*Thus, the default is
0193|*  METHOD=ML   (Maximum likelihood).
0195|*Appropriate statistics for testing the number of factors can be obtained
0196|*by giving the specification N=<number of observations>.
S   |                               <                      >
0197|*The results will be displayed from the (optional) line L onwards.
0198|*The factor matrix is saved in the matrix file FACT.M .
0200|- shadow a: [LINK(qmr2_01.html)]
0201|*  M = More information on multivariate methods
S   |   a                                          |
0202|- shadow a: [LINK(q21_01.html)]
0203|*  S = More information on statistical analysis
S   |   a                                          |
0204|E
0206|+ROTATE? þ PRINT CUR+1,E TO qmr3_08.html
0207|- include HTML40.DEV
0208|- include Q.DV2
0209|- [HelpText]
0210|#ROTATE <factor_matrix>,<number_of_factors>,L  / ROTATION=<method>
S   |        <             > <                 >               <      >
0211|*with an optional ROTATION specification makes an orthogonal or oblique
0212|*factor rotation.
0214|- shadow a: [LINK(qmr3_09.html)]
0215|*  A = General information
S   |   a                     |
0216|- shadow a: [LINK(qmr3_11.html)]
0217|*  B = Varimax rotation (default)
S   |   a                            |
0218|- shadow a: [New][LINK(qmr3_12.html)]
0219|d  C = Jennrich's CLF rotation (orthogonal case)
S   |   a                                           ;
0220|- shadow a: [New][LINK(qmr3_13.html)]
0221|d  D = Jennrich's CLF rotation (oblique case)
S   |   a                                        ;
0222|- shadow a: [New][LINK(qmr3_14.html)]
0223|d  E = Jennrich's CLF rotation (orthogonal case, ENTROPY criterion)
S   |   a                                                              ;
0224|- shadow a: [LINK(qmr3_15.html)]
0225|*  F = Graphical rotation (orthogonal and oblique)
S   |   a                                             |
0226|- shadow a: [LINK(qmr3_16.html)]
0227|*  G = Cosine rotation (oblique)
S   |   a                           |
0228|- shadow a: [LINK(qmr3_17.html)]
0229|*  H = Oblimin rotation (oblique)
S   |   a                            |
0230|- shadow a: [LINK(qmr3_18.html)]
0231|*  I = Quartimax rotation (orthogonal)
S   |   a                                 |
0232|- shadow a: [LINK(qmr3_19.html)]
0233|*  J = Quartimin rotation (oblique)
S   |   a                              |
0235|- shadow a: [New][LINK(qmr3_20.html)]
0236|d  W = Weights of variables
S   |   a                      ;
0238|- shadow a: [LINK(qmr3_01.html)]
0239|*  M = More information on factor analysis
S   |   a                                     |
0241|E
0243|+GENERAL? þ PRINT CUR+1,E TO qmr3_09.html
0244|- include HTML40.DEV
0245|- include Q.DV2
0246|- [HelpText]
0247|#ROTATE <factor_matrix>,<number_of_factors>,L
S   |        <             > <                 >
0248|*with an optional ROTATION specification makes an orthogonal or oblique
0249|*factor rotation.
0250|*The following results are obtained as matrix files:
0251|*  AFACT.M Rotated factor matrix A
0252|*  TFACT.M Rotation matrix T
0253|*  RFACT.M Factor correlation matrix R
0255|*If RESULTS<=70, only A will be written to the edit field (from line L).
S   |           <
0256|*Otherwise, also T and R are printed to the edit field.
0258|*In case of an orthogonal rotation, A=F*T (F=<factor matrix>) and in
S   |                                             <             >
0259|*an oblique rotation A=F*INV(T').
0260|*Optionally, an initial rotation matrix can be given by T=<matrix_file>.
S   |                                                          <           >
0261|*Thus results of automatic rotations can be used as starting points
0262|*for a more subjective graphical solution.
0264|- shadow a: [LINK(qmr3_08.html)]
0265|*  1 = More information about ROTATE
S   |   a                               |
0267|E
0268|+AA? þ PRINT CUR+1,E TO qmr3_10.html
0269|- include HTML40.DEV
0270|- include Q.DV2
0271|- [HelpText]
0273|- shadow a: [LINK(qmr3_08.html)]
0274|*  1 = More information about ROTATE
S   |   a                               |
0276|E
0278|+VARIMAX? þ PRINT CUR+1,E TO qmr3_11.html
0279|- include HTML40.DEV
0280|- include Q.DV2
0281|- [HelpText]
0282|#ROTATE <factor_matrix>,<#_of_factors>,L  / ROTATION=VARIMAX
S   |        <             > <            >
0283|*makes the standard orthogonal Varimax rotation.
0284|*Reference:
0285|*Kaiser, H. F. (1958). The varimax criterion for analytic rotation in
0286|*factor analysis. Psychometrika, 23, 187-200.
0288|- shadow a: [LINK(qmr3_08.html)]
0289|*  1 = More information about ROTATE
S   |   a                               |
0291|E
0293|+JENN1? þ PRINT CUR+1,E TO qmr3_12.html
0294|- include HTML40.DEV
0295|- include Q.DV2
0296|- [HelpText]
0297|*ROTATE <factor_matrix>,<#_of_factors>,L  / ROTATION=ORTHO_CLF,b
S   |        <             > <            >
0298|*makes Jennrich's orthogonal CLF (Component Loss Function) rotation using
0299|*the Linear Right Constant (b) criterion. Default value of b is 0.3.
0300|*See
0301|*Jennrich, R.I. (2004). Rotation to simple loadings using component
0302|*loss functions: The orthogonal case. Psychometrika, 69, 257-273.
0303|- shadow W: [LINK(http://preprints.stat.ucla.edu/402/revision.pdf)] [/LINK]
0304|*http://preprints.stat.ucla.edu/402/revision.pdf
S   | WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
0306|- shadow a: [LINK(qmr3_08.html)]
0307|*  1 = More information about ROTATE
S   |   a                               |
0309|E
0311|+JENN2? þ PRINT CUR+1,E TO qmr3_13.html
0312|- include HTML40.DEV
0313|- include Q.DV2
0314|- [HelpText]
0315|*ROTATE <factor_matrix>,<#_of_factors>,L  / ROTATION=CLF
S   |        <             > <            >
0316|*makes Jennrich's oblique (simple linear) CLF rotation, i.e.
0317|*the sum of absolute values of rotated loadings is minimized.
0318|*See
0319|*Jennrich, R.I. (2004). Rotation to simple loadings using component
0320|*loss functions: The oblique case. (To appear in Psychometrika)
0321|- shadow W: [LINK(http://preprints.stat.ucla.edu/403/revision5.pdf)] [/LINK]
0322|*http://preprints.stat.ucla.edu/403/revision5.pdf
S   | WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
0324|- shadow a: [LINK(qmr3_08.html)]
0325|*  1 = More information about ROTATE
S   |   a                               |
0327|E
0329|+JENN3? þ PRINT CUR+1,E TO qmr3_14.html
0330|- include HTML40.DEV
0331|- include Q.DV2
0332|- [HelpText]
0333|*ROTATE <factor_matrix>,<#_of_factors>,L  / ROTATION=ENTROPY
S   |        <             > <            >
0334|*makes Jennrich's orthogonal CLF rotation using the entropy criterion.
0335|*See
0336|*Jennrich, R.I. (2004). Rotation to simple loadings using component
0337|*loss functions: The orthogonal case. Psychometrika, 69, 257-273.
0338|- shadow W: [LINK(http://preprints.stat.ucla.edu/402/revision.pdf)] [/LINK]
0339|*http://preprints.stat.ucla.edu/402/revision.pdf
S   | WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
0341|- shadow a: [LINK(qmr3_08.html)]
0342|*  1 = More information about ROTATE
S   |   a                               |
0344|E
0346|+GRAPHROT? þ PRINT CUR+1,E TO qmr3_15.html
0347|- include HTML40.DEV
0348|- include Q.DV2
0349|- [HelpText]
0350|*ROTATE <factor_matrix>,<#_of_factors>,L  / ROTATION=GRAPHICAL
S   |        <             > <            >
0351|*makes graphical rotations in a Survo graphics window.
0352|*Both orthogonal and oblique rotations can be performed as a sequence of
0353|*two-dimensional rotations.
0354|*Actions can be controlled either by the mouse or by the keyboard.
0356|*   At first the orthogonal procedure is suggested and Varimax and
0357|*Quartimax criteria can be used as an aid in selection of proper
0358|*rotation angles.
0359|*   When necessary, the user can proceed to the oblique case by 'O' and
0360|*indicate the new positions of the selected axes stepwise by the mouse.
0361|*   Rotation angles are indicated by the mouse.
0362|*Rotation takes place by 'R' or by clicking by the rigth-most mouse button.
0363|*   The variables are shown as vectors (D) or as points (P) or
0364|*   by their labels (L). 'D','P', and 'L' are on/off buttons.
0365|*Next pair of axis is selected either by 'N' or by clicking the graph
0366|*in any place close to the center.
0367|*Graphical rotation is terminated by 'X' and cancelled by 'C'.
0369|*ROTATION=GRAPHICAL,<string_of_characters_OPLD>
S   |                    <                         >
0370|* Graphical rotation with user-defined setting of options
0371|* O,P,L,D described on the previous page.
0372|* ROTATION=GRAPHICAL,LD is the default setting.
0374|- [New]
0375|*Options according to principles suggested by Lauri Tarkkonen:
0376|- [/New]
0377|*FSHOW=<matrix_file> gives a vector indicating which variables will
S   |       <           >
0378|*be visible (value 1) and which will be invisible (value 0) in displays
0379|*of the factor space. This feature makes displays clearer when the
0380|*number of variables is high.
0381|*EXTERNAL=<matrix_file> gives loadings of external variables to be
S   |          <           >
0382|*shown (in gray) in displays. Showing of external variables helps
0383|*the user in selecting rotations to directions given by this extra
0384|*information.
0385|*A setup including these options can be created by /EXTFACTA. See
0386|*/EXTFACTA ?
0388|- shadow a: [LINK(qmr3_08.html)]
0389|*  1 = More information about ROTATE
S   |   a                               |
0391|E
0393|+COS? þ PRINT CUR+1,E TO qmr3_16.html
0394|- include HTML40.DEV
0395|- include Q.DV2
0396|- [HelpText]
0397|*ROTATE <factor_matrix>,<#_of_factors>,L  / ROTATION=COS,min_h2
S   |        <             > <            >
0398|*makes the oblique Cosine rotation of Ahmavaara and Markkanen by
0399|*Mustonen's determinant criterion and algorithm. Let r be the number of
0400|*factors. The r new factor axes will coincide with the r most orthogonal
0401|*original variables in the factor space. The solution is found by
0402|*maximizing the `volume' of the simplex spanned by r variables. Parameter
0403|*min_h2 gives the lowest limit for the communality of a factor variable.
0404|*Default is 0.3 .
0405|*The algorithm is described in
0406|*Mustonen, S. (1999). Matrix computations in Survo. Proceedings of the
0407|*Eighth International Workshop on Matrices and Statistics, Department of
0408|*Mathematical Sciences, University of Tampere.
0409|- shadow W: [LINK(http://www.survo.fi/papers/Matrix_computations_in_Survo.pdf)] [/LINK]
0410|*http://www.survo.fi/papers/Matrix_computations_in_Survo.pdf
S   | WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
0412|- shadow a: [LINK(qmr3_08.html)]
0413|*  1 = More information about ROTATE
S   |   a                               |
0415|E
0417|+OBLIMIN? þ PRINT CUR+1,E TO qmr3_17.html
0418|- include HTML40.DEV
0419|- include Q.DV2
0420|- [HelpText]
0421|*ROTATE <factor_matrix>,<#_of_factors>,L / ROTATION=OBLIMIN,Delta,Max_iter
S   |        <             > <            >
0422|*makes the direct Oblimin rotation (oblique) by Jennrich and Sampson
0423|*(Harman: Modern Factor Analysis, 2nd ed., pp.334-341).
0424|*Parameters Delta and Max_iter are optional.
0425|*Delta determines how oblique the factors will be.
0426|*Delta=0 (default) gives the most oblique factors.
0427|*On negative values of Delta, factors become more orthogonal.
0428|*Max_iter (default 30) gives the maximum number of iteration rounds.
0429|*Reference:
0430|*Jennrich, R.I. and Sampson, P.F. (1966). Rotation for simple loadings.
0431|*Psychometrika, 31, 313-323.
0432|*See also  Harman: Modern Factor Analysis, 2nd ed., pp.334-341.
0434|- shadow a: [LINK(qmr3_08.html)]
0435|*  1 = More information about ROTATE
S   |   a                               |
0437|E
0439|+QUARTIMAX? þ PRINT CUR+1,E TO qmr3_18.html
0440|- include HTML40.DEV
0441|- include Q.DV2
0442|- [HelpText]
0443|*ROTATE <factor_matrix>,<#_of_factors>,L / ROTATION=QUARTIMAX
S   |        <             > <            >
0444|*makes the orthogonal Quartimax rotation.
0445|*Reference:
0446|*Neuhaus, J. O. & Wrigley, C. (1954). The quartimax method: An analytical
S   |                &
0447|*approach to orthogonal simple structure. British Journal of Statistical
0448|*Psychology, 7, 81-91.
0450|- shadow a: [LINK(qmr3_08.html)]
0451|*  1 = More information about ROTATE
S   |   a                               |
0453|E
0455|+QUARTIMIN? þ PRINT CUR+1,E TO qmr3_19.html
0456|- include HTML40.DEV
0457|- include Q.DV2
0458|- [HelpText]
0459|*ROTATE <factor_matrix>,<#_of_factors>,L / ROTATION=QUARTIMIN
S   |        <             > <            >
0460|*makes the oblique Quartimin rotation.
0461|*Reference:
0462|*Carroll, John.B. (1953). An analytical solution for approximating
0463|*simple structure in factor analysis. Psychometrika, 18, 23-38.
0464|*See also  Harman: Modern Factor Analysis, 2nd ed., pp. 318-324.
0466|- shadow a: [LINK(qmr3_08.html)]
0467|*  1 = More information about ROTATE
S   |   a                               |
0469|E
0471|+WEIGHTS? þ PRINT CUR+1,E TO qmr3_20.html
0472|- include HTML40.DEV
0473|- include Q.DV2
0474|- [HelpText]
0475|*In certain rotation methods the original variables can be weighted
0476|*e.g. in order to give more importance to selected variables.
0477|*The weights are entered by the specification WEIGHTS=<matrix file>
S   |                                                      <           >
0478|*giving a column vector of weights.
0480|*The WEIGHTS specification is currently available in the three
0481|*Jennrich's CLF rotations since any component loss function
0482|*of the form
0483|*   f(L) = sum h[L(i,j)]
0484|*          i,j
0486|*where L(i,j)'s are rotated loadings can be generalized to form
0487|*   fw(L) = sum w(i)*h[L(i,j)]
0488|*           i,j
0490|*where w(i)'s are weights of variables. Default: All weights = 1.
0491|*The weighting option is not presented in Jennrich's papers.
0493|- shadow a: [LINK(qmr3_08.html)]
0494|*  1 = More information about ROTATE
S   |   a                               |
0496|E
0505|+F4? þ PRINT CUR+1,E TO qmr3_21.html
0506|- include HTML40.DEV
0507|- include Q.DV2
0508|- [HelpText]
0509|*Factor analysis: Factor scores
0511|*The factor scores are computed in two steps.
0512|*At first the factor score coefficients are computed by
0513|*/FCOEFF AFACT.M,MSN.M .
0514|*MSN.M is the matrix of means and stddevs obtained by CORR.
0515|*This gives the matrix of coefficients FCOEFF.M .
0517|*If an oblique rotation has been used, the loadings for the factor
0518|*scores are computed by
0519|*/FTCOEFF AFACT.M,TFACT.M,MSN.M .
0521|*Finally, factor scores are obtained by
0522|*LINCO <data>,FCOEFF.M(F1,F2,...)
S   |       <    >
0523|*where <data> is the original (or corresponding) Survo data (file)
S   |       <    >
0524|*and F1,F2 are (possibly new) variables for factor scores.
0525|*Thereafter, the factor scores can be analyzed like any other data
0526|*in Survo.
0527|- shadow a: [LINK(qmr3_01.html)]
0528|*   F = More information on Factor analysis
S   |    a                                     |
0529|E
0531|+/TRAN? þ PRINT CUR+1,E TO qmr3_22.html
0532|- include HTML40.DEV
0533|- include Q.DV2
0534|- [HelpText]
0535|*Transformation analysis for factor solutios: /TRAN sucro family
0537|*Computing transformation and residual matrices:
0538|*/TRAN-LEASTSQR ? / Ahmavaara's original analysis
0539|*/TRAN-SYMMETR  ? / Mustonen's symmetric analysis
0541|*Computing standard errors of residuals by simulation:
0542|*/TRAN-LSTRES    / Ahmavaara's original analysis
0543|*/TRAN-SYMTRES   / Mustonen's symmetric analysis
0545|*Computing sums of squares of residuals for each variable
0546|*in symmetric analysis by simulation:
0547|*/TRAN-SYMTRESV  / Sums of squares of residuals
0548|*/TRAN-VARRES    / P values of them estimated from simulated data
0550|- shadow a: [LINK(qmr3_01.html)]
0551|*   F = More information on Factor analysis
S   |    a                                     |
0552|E
0554|+/LOADFACT? þ PRINT CUR+1,E TO qmr3_23.html
0555|- include HTML40.DEV
0556|- include Q.DV2
0557|- [HelpText]
0558|*/LOADFACT <data_file>,<rotated_factor_matrix>
S   |           <         > <                     >
0559|*writes the rotated factor matrix in the edit field according to
0560|*Lauri Tarkkonen's style by using the LOADM operation with
0561|- shadow %: [LINK(qm3_05.html#LOADM2)] [/LINK]
0562|*certain extra specifications (See LOADM2? for more details).
S   |                                   %%%%%%
0563|*<data_file> is the original data file wherefrom the factor
S   | <         >
0564|*analysis has been carried out. It is needed only for writing
0565|*longer descriptions of variables. Default is -1 (no data file).
0566|*<rotated_factor_matrix> is AFACT.M by default.
S   | <                     >
0568|- shadow a: [LINK(qmr3_01.html)]
0569|*   F = More information on Factor analysis
S   |    a                                     |
0570|E
