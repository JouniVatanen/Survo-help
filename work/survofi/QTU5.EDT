SURVO 98 edit field:    101       1000       1000 (32 bit version)
0001|*SAVE QTU5
0004|*LOAD EDQTU6
0006|+TUTARIT? þ PRINT CUR+1,E TO qtu5_01.html
0007|- include HTML40.DEV
0008|- include Q.DV2
0009|- [HelpText]
0010|*Arithmetics and other internal operations in the tutstack:
0012|*Simple arithmetics can be performed with the words W1,W2,... in the
0013|*tutstack. Permitted calculations are
0015|a  {W3=W1}     W3 is a copy of the word in W1
0016|a  {W3=W1+W2}  W3 will be the sum of W1 and W2
0017|a  {W3=W1-W2}{W3=W1*W2} similarly for subtraction and multiplication
0018|a  {W3=W1/W2}  W3 is the ratio of W1 and W2
0019|a  {W3=W1%W2}  W3 is the remainder in the division when W1 and W2 are integers
0021|aW1 and W2 above can be replaced by constants. Example: {W1=W1+1}
0022|aAlso {W1=<any string>} is permitted. The string must not include
S   |          <          >
0023|acharacters +-*/%&{}@ . Examples:  {W1=0} {W5=SURVO 84C}
S   |                 &
0025|aTwo words, say W1 and W2,  can be concatenated to W3 by {W3=W1&W2}
S   |                                                               &
0026|aExample: {W1=SURVO}{W2= 84C}{W3=W1&W2} gives W3=SURVO 84C .
S   |                                   &
0028|*Example: Sucro PRIMES writes all the primes.
0030|*10 *
0031|*11 *TUTSAVE PRIMES
0032|*12 / def Wnumber=W1 Wfactor=W2 Wremainder=W3 Wsquare=W4
0033|a13 *{tempo 1}{R}
0034|a14 *SCRATCH {act}{home}2 3{Wnumber=1}
0035|a15 + A: {Wnumber=Wnumber+2}{Wfactor=1}
0036|a16 + B: {Wfactor=Wfactor+2}{Wremainder=Wnumber%Wfactor}
0037|a17 - if Wremainder = 0 then goto A
0038|a18 *{Wsquare=Wfactor*Wfactor}
0039|a19 - if Wsquare < Wnumber then goto B
S   |                 <
0040|a20 * {write Wnumber}{goto A}{end}
0041|*21 *
0042|*22 */PRIMES
0043|*23 *2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97
0044|*24 *101 103 107 109 113 127 131 137 139 149 etc.
0045|*25 *
0047|- shadow a: [LINK(qtu3_01.html)]
0048|*S = More information on sucro codes and statements
S   | a                                                |
0049|E
0052|+TUTPATH? þ PRINT CUR+1,E TO qtu5_02.html
0053|- include HTML40.DEV
0054|- include Q.DV2
0055|- [HelpText]
0056|*When a sucro is called without a pathname, it will be looked for
0057|*in this order from directories
0058|*    1.  current data path
0059|*    2.  sucropath, given by sucropath=<path> in SURVO.APU
S   |                                       <    >
0060|*                                   (e.g. sucropath=D:\SUCROS\ )
0061|*    3.  <Survo>\U\S\   (<Survo> is the main directory of SURVO MM.)
S   |         <     >         <     >
0062|*    4.  <Survo>\U\TUT\
S   |         <     >
0063|*    5.  <Survo>\S\
S   |         <     >
0064|*    6.  <Survo>\TUT\
S   |         <     >
0066|*If the sucro does not exist in these directories, an error message
0067|*'Sucro <name> not found!' will be displayed.
S   |        <    >
0069|*By the sucro command
0070|*/WHICH <name_of_sucro>
S   |        <             >
0071|*the current instance of a sucro is automatically detected.
0073|- shadow a: [LINK(qtu1_01.html)]
0074|*  S = More information on sucros
S   |   a                            |
0075|E
0079|+TUTTCH? þ PRINT CUR+1,E TO qtu5_03.html
0080|- include HTML40.DEV
0081|- include Q.DV2
0082|- [HelpText]
0083|SThe tutstack can also be initiated and updated in touch mode by
S   |                                                   7777777777
0084|*touching words and lines in the edit field as follows:
0086|*  W (in touch mode) activates the word touched by the cursor.
0087|*  E (in touch mode) activates the line from the current position to right.
0088|*  B (in touch mode) activates the current character.
0089|*  ! (in touch mode) initiates the tutstack with the word activated
0090|*                    by W,E,B or with the current arithmetic result.
0091|*  ; (in touch mode) adds similarly one word at the end of the tutstack.
0093|- shadow a: [LINK(qtu3_01.html)]
0094|*  C = More information on sucro codes
S   |   a                                 |
0095|E
0097|+TUTCALL? þ PRINT CUR+1,E TO qtu5_04.html
0098|- include HTML40.DEV
0099|- include Q.DV2
0100|- [HelpText]
0101|*Calling sucros from other sucros
0103|*In large sucro applications, many sucros are cooperating. Sucros can
0104|*call other sucros in two different ways.
0105|*The sucros are either chained or nested. In the former case, one sucro is
0106|*followed by another and there is no return to the first one (unless the
0107|*second calls the first again). In the latter case, the second sucro is
0108|*used as a subroutine and the calling sucro continues again after the
0109|*second one has terminated normally.
0111|- shadow a: [LINK(qtu5_05.html)]
0112|*  1 = Chaining of sucros
S   |   a                    |
0113|- shadow a: [LINK(qtu5_07.html)]
0114|*  2 = Nesting of sucros (calling another sucro as a subprogram)
S   |   a                                                           |
0116|- shadow a: [LINK(qtu1_01.html)]
0117|*  S = More information on sucros in general
S   |   a                                       |
0118|E
0120|+CHAIN? þ PRINT CUR+1,E TO qtu5_05.html
0121|- include HTML40.DEV
0122|- include Q.DV2
0123|- [HelpText]
0124|*Chaining of sucros
0126|*Another sucro is called as a continuation of the current one by the
0127|acode word {load <sucro>} which may also appear (without braces) in
S   |                 <     >
0128|*conditional statements (if, switch, on key).
0129|*The new sucro continues exactly from the setup created by the previous
0130|*one. Thus the tutstack, the cursor position and all other system
0131|*attributes and parameters are preserved.
0133|- shadow a: [LINK(qtu5_04.html)]
0134|*  C = More information on sucro calls
S   |   a                                 |
0135|- shadow a: [LINK(qtu1_01.html)]
0136|*  S = More information on sucros in general
S   |   a                                       |
0137|E
0138|+C? þ PRINT CUR+1,E TO qtu5_06.html
0139|- include HTML40.DEV
0140|- include Q.DV2
0141|- [HelpText]
0143|- shadow a: [LINK(qtu5_04.html)]
0144|*  C = More information on sucro calls
S   |   a                                 |
0145|- shadow a: [LINK(qtu1_01.html)]
0146|*  S = More information on sucros in general
S   |   a                                       |
0147|E
0149|+SUBSUCRO? þ PRINT CUR+1,E TO qtu5_07.html
0150|- include HTML40.DEV
0151|- include Q.DV2
0152|- [HelpText]
0153|*Nesting of sucros
0155|*When a sucro is running it can call another sucro (say SUCRO2)
0156|*as a subroutine either by activating it as a Survo command (/SUCRO2)
0157|*or without any visible signs by certain special codes.
0159|*If another sucro is activated by a Survo command, the tutstack is
0160|*lost and replaced by the parameters of the new sucro.
0161|*Also the reference point (set by REF key) is cancelled.
0163|*Example:
0164|a  11 *TUTSAVE S2    / This sucro is used as a subroutine.
0165|a  12 *{R}Sucro S2 working...
0166|a  13 *{W1=W1+W2}{end}
0167|a  14 *
0168|a  15 *TUTSAVE S1    / This sucro is the main program.
0169|a  16 / Tutstack will contain 11@22@ :
0170|a  17 *{init}{del stack}{W1=11}{W2=22}{R}Sucro S1 starts...{R}
0171|a  18 / After calling S2, tutstack will be 25@11@ :
0172|a  19 *{erase}/S2 25,{print W1}{act}
0173|a  20 / The altered contents of W1 is printed:
0174|a  21 *{R}{print W1}{end}
0175|a  22 *
0176|a  23 *If both sucros are saved, activation of /S1 gives:
0177|a  24 */S1
0178|a  25 *Sucro S1 starts...
0179|a  26 *Sucro S2 working...
0180|a  27 *36_
0182|*Another sucro (say SUCRO2) can be called as a subroutine also without
0183|*any visible traces in the edit field either by the sucro code
0185|a   {call SUCRO2}
0186|*or
0187|a   {calls SUCRO2}
0189|*In the first case, the tutstack and the reference point are preserved
0190|abut in the second case they are lost as in /SUCRO2{act}.
0192|aBy the commands {save stack},{load stack},{save stack <file>},
S   |                                                       <    >
0193|a{load stack <file>} one can restore the original contents of the
S   |             <    >
0194|*tutstack after the return from a subsucro.
0195|*A subsucro can call another subsucro and so on. Maximum number of
0196|*nested sucros is 5. However, when chaining sucros, there are no limits.
0198|- shadow a: [LINK(qtu5_04.html)]
0199|*  C = More information on sucro calls
S   |   a                                 |
0200|- shadow a: [LINK(qtu1_01.html)]
0201|*  S = More information on sucros in general
S   |   a                                       |
0202|E
0204|+TUTERR? þ PRINT CUR+1,E TO qtu5_08.html
0205|- include HTML40.DEV
0206|- include Q.DV2
0207|- [HelpText]
0208|*Error control in sucros:
0209|*Errors in applications using various Survo operations may have harmful
0210|*consequences in sucros.
0211|*For example, a sucro may try to operate on a non-existent data file
0212|*suggested by the user.
0213|*To overcome such failures, an automatic error recovery scheme has been
0214|*added. Whenever an error occurs, Survo gives an error message and
0215|*prompts to press any key). Such messages will be omitted in sucros.
0216|*Instead of an interrupt, the current contents of the sucro memory will
0217|*be replaced by
0218|a  ERR@<error_no.>@<name_of_operation>@<error_message>
S   |       <         > <                 > <             >
0219|*and a special error handler SURVOERR.TUT (in <Survo>\S) is called to display
S   |                                              <     >
0220|*the error message on the bottom line and the current job is terminated.
0221|*In any sucro application, this error handler sucro can be replaced
0222|*by another, possibly giving a chance for the user to correct his/her
0223|*actions before trying again. To override the default error handler
0224|asucro (SURVOERR), give the code word {error handler <name_of_sucro>}
S   |                                                     <             >
0225|*and your own routine will take the responsibility for the consequences.
0227|*In the current Survo version, only a limited set of Survo
0228|*operations is employing the new error recovery scheme.
0229|*Such operations are FILE SHOW,CORR,LINREG,FACTA.
0231|- shadow a: [LINK(qtu1_01.html)]
0232|*  S = More information on sucros
S   |   a                            |
0233|E
