SURVO 98 edit field:    101       1000       1000 (32 bit version)
0001|*SAVE QM2
0005|*................................................................................
0006|*LOAD EDQ
0007|+MAT? þ PRINT CUR+1,E TO qm2_01.html
0008|- include HTML40.DEV
0009|- include Q.DV2
0010|- [HelpText]
0011|*Matrix operations in Survo:
0012|- shadow a: [LINK(qm2_02.html)]
0013|*  A = General information
S   |   a                     |
0014|- shadow a: [LINK(qm2_03.html)]
0015|*  B = MAT operations
S   |   a                |
0016|- shadow a: [LINK(qm4_03.html)]
0017|*  C = MAT chains
S   |   a            |
0018|- shadow a: [LINK(qmr1_01.html)]
0019|*  D = MATRUN operations
S   |   a                   |
0020|- shadow a: [LINK(q23_08.html)]
0021|*  F = Matrix files as data sets
S   |   a                           |
0022|- shadow a: [New][LINK(qm7_02.html)]
0023|d  G = Matrix expressions
S   |   a                    ;
0024|- shadow a: [LINK(qm2_06.html)]
0025|*  N = Names of matrices
S   |   a                   |
0026|- shadow a: [LINK(q0e_06.html)]
0027|*  R = Results of operations as matrix files
S   |   a                                       |
0028|- shadow a: [LINK(qma_01.html)]
0029|*  X = Additional MAT #operations
S   |   a                            |
0031|- shadow a: [LINK(q21_01.html)]
0032|*  S = More information on statistical operations
S   |   a                                            |
0033|- shadow a: [LINK(qm1_01.html)]
0034|*  M = More information on mathematical operations
S   |   a                                             |
0035|E
0038|+GEN? þ PRINT CUR+1,E TO qm2_02.html
0039|- include HTML40.DEV
0040|- include Q.DV2
0041|- [HelpText]
0042|*Various matrix computations may be performed by MAT operations.
0043|*The MAT operations work with matrices saved in special matrix files.
0044|*Each matrix file contains only one matrix referred to by the name of
0045|*the file. The default extension for matrix files is .MAT
0046|*For example,
0047|*MAT C=A+B    (or MAT C~A+B)
0048|*computes the sum of matrices in files A.MAT and B.MAT and writes the
0049|*result in file C.MAT on the current data disk.
0051|*Each matrix in a matrix file has also a name which tells the origin
0052|*of the matrix in question. The MAT operations update these names
0053|*using normal matrix algebra notations.
0054|*Assume that in the preceding example A has a name X'*X and B has a name
0055|*Y'*Y. Then C will have the name X'*X+Y'*Y.
0056|*After the MAT operation the current name of the result will be displayed
0057|*on the operation line as follows:
0058|*MAT C=A+B                    / *C~X'*X+Y'*Y S20*20
0059|*'S20*20' tells that C is now a symmetric 20x20 matrix.
0060|*To display the numerical results, MAT LOAD operation should be employed.
0061|- shadow a: [LINK(qm2_01.html)]
0062|*  M = More information on Matrix operations
S   |   a                                       |
0063|E
0066|+MATO? þ PRINT CUR+1,E TO qm2_03.html
0067|- include HTML40.DEV
0068|- include Q.DV2
0069|- [HelpText]
0070|*MAT operations:
0071|- shadow a: [LINK(qm3_01.html)]
0072|*  A = MAT SAVE  (saving matrices in matrix files)
S   |   a                                             |
0073|- shadow a: [LINK(qm3_04.html)]
0074|*  B = MAT LOAD, LOADM (loading matrix files to edit field)
S   |   a                                                      |
0075|- shadow a: [LINK(qm2_04.html)]
0076|*  C = Standard matrix algebra (+,-,*,',INV etc.)
S   |   a                                            |
0077|- shadow a: [LINK(qm8_01.html)]
0078|*  D = Normalizations and derived matrices
S   |   a                                     |
0079|- shadow a: [LINK(qm5_05.html)]
0080|*  E = Element by element transformations
S   |   a                                    |
0081|- shadow a: [LINK(qm4_04.html)]
0082|*  F = Scalars in MAT operations
S   |   a                           |
0083|- shadow a: [LINK(qm6_01.html)]
0084|*  G = Matrix decompositions
S   |   a                       |
0085|- shadow a: [LINK(qm4_01.html)]
0086|*  H = Submatrices
S   |   a             |
0087|- shadow a: [LINK(qm5_01.html)]
0088|*  I = Control and auxiliary operations
S   |   a                                  |
0089|- shadow a: [LINK(qm4_05.html)]
0090|*  J = Row and column labels
S   |   a                       |
0091|- shadow a: [LINK(qma_01.html)]
0092|*  K = Additional MAT #operations
S   |   a                            |
0093|- shadow a: [LINK(qm6_07.html)]
0094|*  L = Linear equations and least squares solutions (MAT SOLVE)
S   |   a                                                          |
0095|- shadow a: [LINK(qm7_01.html)]
0096|*  S = Saving matrix files to Survo data files
S   |   a                                         |
0098|- shadow a: [LINK(qm2_01.html)]
0099|*  M = More information on Matrix operations
S   |   a                                       |
0100|E
0103|+MATCALC? þ PRINT CUR+1,E TO qm2_04.html
0104|- include HTML40.DEV
0105|- include Q.DV2
0106|- [HelpText]
0107|*The standard operations for matrix algebra are:
0108|*MAT REM <text>  / no operation, for comments etc.
S   |         <    >
0109|- [New]
0110|*MAT A           / writes the internal name of matrix A and dimensions
0111|- [/New]
0112|*MAT DIM A       / writes the dimensions of matrix A on the same line
0113|*                  in the form   / * rowA=20 colA=8
0114|*                  If A is diagonal, also rank of A (# of nonzero diagonal
0115|*                  elements) is given in the form  rankA=5
0116|*MAT C=ZER(10,3)      / null matrix 10*3
0117|*MAT C=IDN(10,10)     / identity matrix 10*10
0118|*MAT C=IDN(10,10,0.3) / 0.3*IDN(10,10)
0119|*MAT C=CON(10,3)      / 10*3 matrix with all elements =1
0120|*MAT C=CON(10,3,0.3)  / 10*3 matrix with all elements =0.3
0121|*MAT C=TRI(10,10,0.3) / upper 10*10 triangular matrix with non-zero elements =0.3
0122|*MAT C=A         / copies A to C
0123|*MAT C=A'        / transpose of A
0124|*MAT C=A+B
0125|*MAT C=A-B
0126|*MAT C=A*B
0127|*MAT C=MMT(A)    / C=A*A'        MAT C=MMT2(A,B)   / C=A*B'
0128|*MAT C=MTM(A)    / C=A'*A        MAT C=MTM2(A,B)   / C=A'*B
0130|*MAT C=INV(A)    / inverse of A
0131|*MAT C=INV(A,det)  inverse and determinant of A
0132|*                  determinant is given in the form /* det=1.0045
0133|- shadow %: [%=0]
0134|*                  See also MATSOLVE?
S   |                            %%%%%%%%
0135|*MAT C=DINV(A)   / makes a 'generalized inverse' of a diagonal matrix A
0136|*                  by inverting the non-zero diagonal elements only.
0137|- shadow %: [%=0]
0138|*                  See SING(ular value decomposition) and MPINV.
S   |                       %%%%%%%%%
0139|*MAT C=DINV(A,eps) uses value eps as upper limit for 'zero'.
0140|*                  Default value for eps is 1e-15.
0141|*                  (Use MAT R=RANK(A) to see the rank.)
0142|*MAT TRACE A     / trace of A in the form   /*  trA=30.7
0144|*MAT C=A^n       / n'th power of a square matrix A (n integer>0)
S   |                                                             >
0145|*MAT C=A^k       / k'th power of a positive semidefinite A (k>0) or
S   |                                                             >
0146|*                                  positive definite A (k<>0)
S   |                                                         <>
0147|*                  For example, MAT C=A^0.5 gives square root of A.
0148|*MAT C=A^k       / if A is a vector, C is vector of k'th powers of A elements.
0150|*MAT C=KRONECKER(A,B) / Kronecker product of A and B
0152|*MAT C=RANK(A)   / C(1,1)=the rank of A (C is a 1x1 matrix)
0153|*MAT C=TRACE(A)  / C is tr(A).
0154|*MAT C=DET(A)    / C is the determinant of A.
0155|*MAT C=LDET(A)   / C is the logarithm of DET(A).
0157|*MAT C=NULL(A)   / C is an orthonormal basis of the null space of A.
0158|- shadow %: [%=0]
0159|*                  See also MATSOLVE?
S   |                            %%%%%%%%
0160|*MAT C=BASIS(A)  / C is an orthonormal basis of the column space of A.
0161|- shadow %: [LINK(qma_14.html)] [/LINK]
0162|*                  See also MAXDET?
S   |                            %%%%%%
0163|*MAT C=MPINV(A)  / C is the Moore-Penrose inverse of an m*n A. (MPINV?)
0165|*In RANK, NULL, BASIS, and MPINV the threshold for a singular value =0
0166|*is EPS*d_max (d_max=maximal singular value) where EPS can be given as
0167|*a specification. By default EPS=1e-15.
0169|- shadow %: [LINK(qm2_05.html)] [/LINK]
0170|*More about operations related generalized inverses etc. (See MPINV?)
S   |                                                              %%%%%
0173|- [NAME(MATCALC2)][/NAME] / qm2_04.html#MATCALC2 MATCALC2?
0174|*Any matrix operand can also be given in transposed form.
0176|*For example,
0177|*MAT C=A+B'
0178|*MAT C=A'*B
0179|*MAT C=INV(SUMS')
0180|*MAT LOAD A'(1:5,*)
0181|*are permitted operations.
0183|- shadow a: [LINK(qm7_02.html)]
0184|*  G = General matrix expressions
S   |   a                            |
0185|- shadow a: [LINK(qm2_03.html)]
0186|*  M = More information on MAT operations
S   |   a                                    |
0187|E
0190|+MPINV? þ PRINT CUR+1,E TO qm2_05.html
0191|- include HTML40.DEV
0192|- include Q.DV2
0193|- [HelpText]
0194|*MAT G=MPINV(A) computes the Moore-Penrose inverse G of any m*n matrix A.
0195|*If m<n, G is computed as MPINV(A')'.
S   |     <
0196|*Let the singular value decomposition of A be A=U*D*V'
0197|*where D is the diagonal matrix of singular values d1>=d2>=,...,>=dm>=0.
S   |                                                     >   >      >   >
0198|*Then MPINV(A)=V*INV_D*U' where INV_D is a diagonal matrix of numbers
0199|*ei, i=1,2,...,m where e1=1/di if di>=eps*d1 and e1=0 otherwise.
S   |                                    >
0200|*eps is given by a specification EPS. By default eps=1e-15.
0202|*G is the only generalized inverse of A satisfying the conditions
0203|*AGA=A, GAG=G, (AG)'=AG, (GA)'=GA.
0205|*Certain useful MAT expressions (proposed by Simo Puntanen):
0207|*MAT P=A*MPINV(A)
0208|*is the orthogonal projector (with respect to standard inner product)
0209|*onto the column space of A.
0211|*MAT C=A*MPINV(A'*V*A)*A'*V
0212|*is the orthogonal projector (with respect to inner product matrix V)
0213|*onto the column space of A.
0215|*MAT P=IDN(m,m)-BASIS(A)*(BASIS(A))'.
0216|*is the orthogonal projector (with respect to standard inner product)
0217|*onto the orthocomplement of the column space of A.
0219|*MAT Z=BASIS(IDN(m,m)-BASIS(A)*(BASIS(A))').
0220|*is the orthonormal basis of the orthocomplement of the column space of
0221|*A.
0222|E
0224|+MATNAME? þ PRINT CUR+1,E TO qm2_06.html
0225|- include HTML40.DEV
0226|- include Q.DV2
0227|- [HelpText]
0228|*Recommendation:
0229|*Names of matrix files should be strings starting by characters
0230|*A-Z ! _ &
S   |         &
0231|*Names starting by other characters are treated as scalars.
0232|*Temporary matrix files created by sucros should have names
0233|*starting systematically by one of the characters ! _ &.
S   |                                                      &
0234|*Then, for example, matrices starting by ! can be easily deleted
0235|*at the end of the sucro by the command
0236|*MAT KILL !*.MAT
0238|*Many (statistical) Survo operations give results as matrix files
0239|*with the extension .M (like CORR.M and MSN.M in CORR).
0240|*A list of such matrices is found by MATRES?
0241|E
