SURVO 98 edit field:    201       2000       300 (32 bit version)
0001|*SAVE file-save-with-fields  / FILE SAVE WIH FIELDS 10.8.2015 Jouni Vatanen
0004|*DEF content,10,E
0010|*File save with fields
S   | kkkkkkkkkkkkkkkkkkkkk
0011|*Description
S   | lllllllllll
0012|*FILE SAVE WITH FIELDS saves contents of a text file to Survo data file.
S   | xxxxxxxxxxxxxxxxxxxxx
0013|*FILE SAVE WITH FIELD works like FILE SAVE.
0015|*Usage
S   | lllll
0016|(FILE SAVE 'text file' TO 'Survo data file'
0017|*FIELDS:
0018|*1  <name of a field in Survo data file or '-'> <length or delimiters>
0019|*2  <name of a field in Survo data file or '-'> <length or delimiters>
0020|*- - -
0021|*K  <name of a field in Survo data file or '-'> <length or delimiters>
0022|*END
0023|)
0025|*Specifications
S   | llllllllllllll
0026|- [TABLE]
0027|r
0028|C'text file'
S   | xxxxxxxxxxx
0029|CThe whole name of the text file that you want to save. Use without
0030|*'-characters and with the correct file extension
0031|r
0032|C'Survo data file'
S   | xxxxxxxxxxxxxxxxx
0033|CName of the file where the data will be saved. Use without '-characters.
0034|r
0035|CK
S   | x
0036|CK is the number of fields in one text file.
S   | x
0037|r
0038|CNAMES
S   | xxxxx
0039|CNAMES=names_line gives the line for the variable names in Survo data
S   | xxxxxxxxxxxxxxxx
0040|*file. Default (if no NAMES given): variable names X1, X2, ... are used.
0041|*NAMES=DEFAULT maps the columns of a text file to the active variables of
S   | xxxxxxxxxxxxx
0042|*Survo data file.
0043|r
0044|CNEW
S   | xxx
0045|CFILE SAVE 'text file' TO NEW 'Survo data file' deletes the existing Survo data file.
S   | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
0046|r
0047|CDELIMITER
S   | xxxxxxxxx
0048|CDELIMITER=char(number) separates the columns of the text file. Default:
S   | xxxxxxxxxxxxxxxxxxxxxx
0049|*one or more blank (space) characters. Possible values are denoted by
0050|*char(i), i=1,...,255. Keyword TAB may be used instead of char(9).
0051|r
0052|CFIRST
S   | xxxxx
0053|CFIRST=first line. The first line to be copied from the text file.
S   | xxxxxxxxxxxxxxxx
0054|*Default: 1.
0055|r
0056|CLAST
S   | xxxx
0057|CLAST=last line. The last line to be copied from the text file.
S   | xxxxxxxxxxxxxx
0058|*Default: last line of the text file.
0059|r
0060|CMAXFIELDS
S   | xxxxxxxxx
0061|CMAXFIELDS=# of fields defines maximum number of fields in the text file.
S   | xxxxxxxxxxxxxxxxxxxxx
0062|*Default: 300.
0063|r
0064|CMISSING
S   | xxxxxxx
0065|CMISSING=string treats string as a missing value. Default: spaces and/or '-'.
S   | xxxxxxxxxxxxxx
0066|r
0067|CENCODING
S   | xxxxxxxx
0068|CENCODING=encoding of the text file spesifies, how to encode the text
S   | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
0069|*file. This spesification is used only if the system doesn't regognize
0070|*encoding. ENCODING=UTF-8 encodes UTF-8 text files. Default: DEFAULT.
S   |           xxxxxxxxxxxxxx
0071|r
0072|C>R
S   | >x
0073|C>R'R data frame' transforms R data frame to Survo data. Use without '-characters.
S   | >xxxxxxxxxxxxxxx
0074|r
0075|CSKIP
S   | xxxx
0076|CSKIP=list_of_characters skips unwanted charcters.
S   | xxxxxxxxxxxxxxxxxxxxxxx
0077|r
0078|CMATCH
S   | xxxxx
0079|C
0081|r
0082|CSKIP_ERRORS
S   | xxxxxxxxxxx
0083|CDoes not interrupt saving the text file when the line has too few
0084|*fields. SKIP_ERRORS=1 deletes incomplete lines. SKIP_ERRORS=2 creates a
S   |         xxxxxxxxxxxxx                           xxxxxxxxxxxxx
0085|*data record from an incomplete line and assumes that missing fields are
0086|*at the end of the text line.
0087|r
0088|CCHECK_VAR_NAMES
S   | xxxxxxxxxxxxxxx
0089|CCHECK_VAR_NAMES=0 treats variable names as is instead of altering the 8th character
S   | xxxxxxxxxxxxxxxxx
0090|*if duplicate variable names are encountered.
0091|r
0092|CREMOVE_QUOTES
S   | xxxxxxxxxxxxx
0093|CREMOVE_QUOTES=1 converts double quotes within text to ''.
S   | xxxxxxxxxxxxxxx
0094|r
0095|CFORMAT
S   | xxxxxx
0096|CFORMAT=0 avoids collison with wrong format-lists like NOFORMAT=1.
S   | xxxxxxxx
0097|r
0098|CNOFORMAT
S   | xxxxxxxx
0099|CNOFORMAT=1 avoids collison with wrong format-lists like FORMAT=0.
S   | xxxxxxxxxx
0100|r
0101|CFILTER
S   | xxxxxx
0102|CFILTER=conversion file converses a text file to a Survo data file with
S   | xxxxxxxxxxxxxxxxxxxxxx
0103|*specific conversion rules. For making code conversion files check
0104|- [LINK(#)]
0105|*code conversion.FILTER=#DOTCOMMA FILTER=#COMMADOT replaces
S   |               | xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxx
0106|*dots with commas and vice versa. FILTER=#SEMICOMMA replaces semicommas
S   |                                  xxxxxxxxxxxxxxxxx
0107|*with commas.
0108|r
0109|CNOFIELDS
S   | xxxxxxxx
0110|CNOFIELDS avoids collision with wrong field-lists.
S   | xxxxxxxx
0111|r
0112|CNEWSPACE
S   | xxxxxxxx
0113|CNEWSPACE=m,n creates a Survo data file with space for m records and n
S   | xxxxxxxxxxxx
0114|*variables. NEWSPACE=0,0 creates a Survo data file with no extra space.
0115|r
0116|CDEC
S   | xxx
0117|CDEC=character specifies the decimal character used. Default: . (dot).
S   | xxxxxxxxxxxxx
0118|r
0119|CMODEL
S   | xxxxx
0120|CMODEL=# of a line allows to give 'model-line'.???
S   | xxxxxxxxxxxxxxxxx
0122|- [/TABLE]
0123|*Details
S   | lllllll
0124|/where K is the number of fields in one logical record in the text file,
0125|*copies a part of a text file to a Survo data file.
0126|*If the Survo data file does not exist, a new file will be created.
0127|*The fields of the text file are mapped to various Survo data fields
0128|*according to the list. Fields which are not copied from the text file
0129|*are indicated by a '-' in the list.
0130|*If <length or delimiters> is not given, the field is assumed to be ter-
0131|*minated by one or several spaces in the text file. However,
0132|*the last field in each record must be terminated by a line feed.
0133|*Other fields ending with line feed should be indicated by LF in the
0134|*list. For example, 10 test3 LF
0135|*The <length or delimiters> parameter can also be an integer giving the
0136|*fixed length of the corresponding field in the text file or it can
0137|*be a sequence of delimiter characters.
0138|*For example, 11 test6 5
0139|*             12 test7 :/
0140|*defines test6 as a field of 5 characters and test7 as a field of
0141|*next characters ending by : or / or space. A delimiter can also
0142|*be given in the form [decimal_value]. For example,
0143|*             13 test8 [50][51]
0144|*defines test8 to be terminated by one or several '1's or '2's.
0145|*Please, note that
0146|*             13 test8 12
0147|*would define test8 to be a field of 12 characters.
0149|*The default mode (MODE=1), when interpreting the text file, considers
0150|*spaces as delimiters also when other symbols are given as delimiters.
0151|*Thus fields consisting of several words are not treated correctly.
0152|*In such cases a apecification MODE=2 should be given. Then also
0153|*empty fields terminating with LF will be accepted.
0155|*See also
S   | llllllll(
0156|- [LINK(file-save.html)]
0157|*FILE SAVE
S   |         |
0158|- [LINK(#)]
0159|*FILE STATUS,
S   |           |
0160|- [LINK(#)]
0161|*FILE UPDATE,
S   |           |
0162|- [LINK(#)]
0163|*FILE CREATE,
S   |           |
0164|- [LINK(#)]
0165|*FILE LOAD,
S   |         |
0166|- [LINK(#)]
0167|*TXTCONV,
S   |       |
0168|- [LINK(#)]
0169|*TXTRIM,
S   |      |
0170|- [LINK(#)]
0171|*FILE SAVE MAT
S   |             |)
0173|*Examples
S   | llllllll
0174|(FILE SAVE data1.txt TO data / DELIMITER=TAB
0175|*..........
0176|)
0177|/
0178|(FILE SAVE data1.txt TO data / NAMES=1 FIRST=2 LAST=10
0179|*..........
0180|)
0181|/
0182|(FILE SAVE data1.txt TO data / SKIP=";|
0183|*..........
0184|)
0185|/
0186|(FILE SAVE data1.txt TO data / DELIMITER=TAB NAMES=1 FIRST=2
0187|)
0188|- [/DIV]
0190|E
